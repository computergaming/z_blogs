<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.zzzzzzz.mvc.tags.dao.BlogTagsMapper">

    <resultMap id="BaseResultMap" type="online.zzzzzzz.mvc.tags.dao.entity.BlogTags">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="tags_key" jdbcType="VARCHAR" property="tagsKey" />
        <result column="tags_name" jdbcType="VARCHAR" property="tagsName" />
        <result column="tags_num" jdbcType="INTEGER" property="tagsNum" />
        <result column="color" jdbcType="VARCHAR" property="color" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
    </resultMap>


    <sql id="Base_Column_List">
  id, tags_key, tags_name, tags_num, color, sort
</sql>

    <select id="getAll" resultMap="BaseResultMap">
        select * from blog_tags
    </select>

    <delete id="delete" parameterType="java.lang.Integer">
  delete from blog_tags
  where id = #{id,jdbcType=INTEGER}
</delete>


    <insert id="insert" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags">
  insert into blog_tags (id, tags_key, tags_name, 
    tags_num, color, sort
    )
  values (#{id,jdbcType=INTEGER}, #{tagsKey,jdbcType=VARCHAR}, #{tagsName,jdbcType=VARCHAR}, 
    #{tagsNum,jdbcType=INTEGER}, #{color,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}
    )
</insert>


    <insert id="insertDynamic" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags">
        insert into blog_tags
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tagsKey != null">
                tags_key,
            </if>
            <if test="tagsName != null">
                tags_name,
            </if>
            <if test="tagsNum != null">
                tags_num,
            </if>
            <if test="color != null">
                color,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tagsKey != null">
                #{tagsKey,jdbcType=VARCHAR},
            </if>
            <if test="tagsName != null">
                #{tagsName,jdbcType=VARCHAR},
            </if>
            <if test="tagsNum != null">
                #{tagsNum,jdbcType=INTEGER},
            </if>
            <if test="color != null">
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags">
        update blog_tags
        <set>
            <if test="tagsKey != null">
                tags_key = #{tagsKey,jdbcType=VARCHAR},
            </if>
            <if test="tagsName != null">
                tags_name = #{tagsName,jdbcType=VARCHAR},
            </if>
            <if test="tagsNum != null">
                tags_num = #{tagsNum,jdbcType=INTEGER},
            </if>
            <if test="color != null">
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags">
  update blog_tags
  set tags_key = #{tagsKey,jdbcType=VARCHAR},
    tags_name = #{tagsName,jdbcType=VARCHAR},
    tags_num = #{tagsNum,jdbcType=INTEGER},
    color = #{color,jdbcType=VARCHAR},
    sort = #{sort,jdbcType=INTEGER}
  where id = #{id,jdbcType=INTEGER}
</update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  blog_tags
        where id = #{id,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="tagsKey != null and tagsKey != ''" >
                and tags_key = #{tagsKey,jdbcType=VARCHAR}
            </if>
            <if test="tagsName != null and tagsName != ''" >
                and tags_name = #{tagsName,jdbcType=VARCHAR}
            </if>
            <if test="tagsNum != null" >
                and tags_num = #{tagsNum,jdbcType=INTEGER}
            </if>
            <if test="color != null and color != ''" >
                and color = #{color,jdbcType=VARCHAR}
            </if>
            <if test="sort != null" >
                and sort = #{sort,jdbcType=INTEGER}
            </if>
        </where>
    </sql>

    <sql id="pageFindPageWithWhere">
        <where> 1=1
         <if test=" p != null">
             <if test="p.id != null" >
                 and id = #{p.id,jdbcType=INTEGER}
             </if>
             <if test="p.tagsKey != null and p.tagsKey != ''" >
                 and tags_key = #{p.tagsKey,jdbcType=VARCHAR}
             </if>
             <if test="p.tagsName != null and p.tagsName != ''" >
                 and tags_name = #{p.tagsName,jdbcType=VARCHAR}
             </if>
             <if test="p.tagsNum != null" >
                 and tags_num = #{p.tagsNum,jdbcType=INTEGER}
             </if>
             <if test="p.color != null and p.color != ''" >
                 and color = #{p.color,jdbcType=VARCHAR}
             </if>
             <if test="p.sort != null" >
                 and sort = #{p.sort,jdbcType=INTEGER}
             </if>
         </if>

        </where>
    </sql>


    <select id="findPageWithResult" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  blog_tags
        <include refid="pageFindPageWithWhere" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="online.zzzzzzz.mvc.tags.dao.entity.BlogTags" resultType="Integer">
        select count(1)
        from blog_tags
        <include refid="pageFindPageWithWhere" />
    </select>



    <select id="getNumAndName" resultType="map">
        select id , tags_name as tagsName  , tags_num as tagsNum  from blog_tags
    </select>

</mapper>