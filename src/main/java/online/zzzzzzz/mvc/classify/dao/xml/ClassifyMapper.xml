<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.zzzzzzz.mvc.classify.dao.ClassifyMapper">

    <resultMap id="BaseResultMap" type="online.zzzzzzz.mvc.classify.dao.entity.BlogClassify">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="classify_key" jdbcType="VARCHAR" property="classifyKey" />
        <result column="classify_name" jdbcType="VARCHAR" property="classifyName" />
        <result column="classify_num" jdbcType="INTEGER" property="classifyNum" />
        <result column="color" jdbcType="VARCHAR" property="color" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
    </resultMap>


    <sql id="Base_Column_List">
  id, classify_key, classify_name, classify_num, color, sort
</sql>


    <select id="getAll" resultMap="BaseResultMap">
       select * from blog_classify
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
  delete from blog_classify
  where id = #{id,jdbcType=INTEGER}
</delete>


    <insert id="insert" parameterType="online.zzzzzzz.mvc.classify.dao.entity.BlogClassify" >
      insert into blog_classify (id, classify_key, classify_name,
        classify_num, color, sort
        )
      values (#{id,jdbcType=INTEGER}, #{classifyKey,jdbcType=VARCHAR}, #{classifyName,jdbcType=VARCHAR},
        #{classifyNum,jdbcType=INTEGER}, #{color,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}
        )
    </insert>


    <insert id="insertDynamic" parameterType="online.zzzzzzz.mvc.classify.dao.entity.BlogClassify">
        insert into blog_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="classifyKey != null">
                classify_key,
            </if>
            <if test="classifyName != null">
                classify_name,
            </if>
            <if test="classifyNum != null">
                classify_num,
            </if>
            <if test="color != null">
                color,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="classifyKey != null">
                #{classifyKey,jdbcType=VARCHAR},
            </if>
            <if test="classifyName != null">
                #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="classifyNum != null">
                #{classifyNum,jdbcType=INTEGER},
            </if>
            <if test="color != null">
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <update id="updateDynamic" parameterType="online.zzzzzzz.mvc.classify.dao.entity.BlogClassify">
        update blog_classify
        <set>
            <if test="classifyKey != null">
                classify_key = #{classifyKey,jdbcType=VARCHAR},
            </if>
            <if test="classifyName != null">
                classify_name = #{classifyName,jdbcType=VARCHAR},
            </if>
            <if test="classifyNum != null">
                classify_num = #{classifyNum,jdbcType=INTEGER},
            </if>
            <if test="color != null">
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="update" parameterType="online.zzzzzzz.mvc.classify.dao.entity.BlogClassify">
  update blog_classify
  set classify_key = #{classifyKey,jdbcType=VARCHAR},
    classify_name = #{classifyName,jdbcType=VARCHAR},
    classify_num = #{classifyNum,jdbcType=INTEGER},
    color = #{color,jdbcType=VARCHAR},
    sort = #{sort,jdbcType=INTEGER}
  where id = #{id,jdbcType=INTEGER}
</update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  blog_classify
        where id = #{id,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="classifyKey != null and classifyKey != ''" >
                and classify_key = #{classifyKey,jdbcType=VARCHAR}
            </if>
            <if test="classifyName != null and classifyName != ''" >
                and classify_name = #{classifyName,jdbcType=VARCHAR}
            </if>
            <if test="classifyNum != null" >
                and classify_num = #{classifyNum,jdbcType=INTEGER}
            </if>
            <if test="color != null and color != ''" >
                and color = #{color,jdbcType=VARCHAR}
            </if>
            <if test="sort != null" >
                and sort = #{sort,jdbcType=INTEGER}
            </if>
        </where>
    </sql>


    <sql id="pageFindPageWithWhere">
        <where> 1=1

         <if test="p != null" >
             <if test="p.id != null" >
                 and id = #{p.id,jdbcType=INTEGER}
             </if>
             <if test="p.classifyKey != null and p.classifyKey != ''" >
                 and classify_key = #{p.classifyKey,jdbcType=VARCHAR}
             </if>
             <if test="p.classifyName != null and p.classifyName != ''" >
                 and classify_name = #{p.classifyName,jdbcType=VARCHAR}
             </if>
             <if test="p.classifyNum != null" >
                 and classify_num = #{p.classifyNum,jdbcType=INTEGER}
             </if>
             <if test="p.color != null and p.color != ''" >
                 and color = #{p.color,jdbcType=VARCHAR}
             </if>
             <if test="p.sort != null" >
                 and sort = #{p.sort,jdbcType=INTEGER}
             </if>
         </if>

        </where>
    </sql>


    <select id="findPageWithResult" parameterType="online.zzzzzzz.basics.entity.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  blog_classify
        <include refid="pageFindPageWithWhere" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="online.zzzzzzz.basics.entity.Page" resultType="Integer">
        select count(1)
        from blog_classify
        <include refid="pageFindPageWithWhere" />
    </select>

    <select id="getNumAndName" resultType="map">
        select classify_name as classifyName  , classify_num as classifyNum  from blog_classify
    </select>

</mapper>